spring:
  datasource:
      type: com.alibaba.druid.pool.DruidDataSource
      #指定driver的类名，默认从jdbc url中自动探测.
      driverClassName: com.mysql.jdbc.Driver
      #dev
      url: jdbc:mysql://localhost:3306/sys_admin
      username: root
      password: Ysw1023@qq.com

      druid:
        #配置初始化大小、最小、最大
        initialSize: 1
        minIdle: 3
        maxActive: 20

        #配置获取连接等待超时的时间
        maxWait: 60000

        #有两个含义：1) Destroy线程会检测连接的间隔时间
        #           2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
        timeBetweenEvictionRunsMillis: 60000

        #配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000

        #物理连接初始化的时候执行的sql
        #connectionInitSqls: sql

        #当数据库抛出一些不可恢复的异常时，抛弃连接
        #exceptionSorter: null

        #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，
        #如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
        testWhileIdle: true

        #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
        testOnBorrow: false
        #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
        testOnReturn: false

        #用来检测连接是否有效的sql，要求是一个查询语句。
        #如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
        validationQuery: SELECT 'x'

        #是否缓存preparedStatement，也就是PSCache。
        #PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
        poolPreparedStatements: false

        #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
        #在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
        maxPoolPreparedStatementPerConnectionSize: 20

        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
         # 合并多个DruidDataSource的监控数据
        #useGlobalDataSourceStat: true
  redis:
#    cluster:
      #(普通集群，不使用则不用开启）在群集中执行命令时要遵循的最大重定向数目。)
#      maxRedirects:
      #(普通集群，不使用则不用开启）以逗号分隔的“主机：端口”对列表进行引导。
#      nodes:
    # 连接工厂使用的数据库索引(默认为0)
    database: 0
    #连接URL，将覆盖主机，端口和密码（用户将被忽略），例如：redis://user:password@example.com:6379
    url:
    # Redis服务器主机
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    #启用SSL支持
    ssl: false
    # 连接超时时间（毫秒）
    timeout: 60000ms
#    sentinel:
      #哨兵模式，不使用则不用开启）Redis服务器的名称。
#      master:
      #（哨兵模式，不使用则不用开启）主机：端口对的逗号分隔列表。
#      nodes:
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        maxActive: 200
        # 连接池中的最大空闲连接
        maxIdle: 50
        # 连接池中的最小空闲连接
        minIdle: 4
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        maxWait: 2ms